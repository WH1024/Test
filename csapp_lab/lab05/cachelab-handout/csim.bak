#include "cachelab.h"
#include<unistd.h>
#include<stdlib.h>
#include<stdio.h>
#include<stdlib.h>

extern char *optarg;
extern int optind, opterr, optopt;

int main(int argc, char *argv[])
{
    int hit_count = 0, miss_count = 0, eviction_count = 0;  // 命中，未命中，驱逐
    int opt, s = 0, E = 0, b = 0, tag_v = 0;
    char *file_name;
    FILE *file;
    // 提示帮助信息
    char help[] = "Usage: %s [-hv] -s <num> -E <num> -b <num> -t <file>\n"
        "Options:\n"
        "-h            Print this help message.\n"
        "-v            Optional verbose flag.\n"
        "-s <num>      Number of set index bits.\n"
        "-E <num>      Number of lines per set.\n"
        "-b <num>      Number of block offset bits.\n"
        "-t <file>     Trace file.\n\n"
        "Examples:\n"
        "linux>    %s  -s 4 -E 1 -b 4 -t traces/yi.trace\n"
        "linux>    %s  -v -s 8 -E 2 -b 4 -t traces/yi.trace\n";
    while((opt = getopt(argc, argv, "sEbt:hv")) != -1){
        switch(opt){
            case 'h':
                fprintf(stderr, help, argv[0], argv[0], argv[0]);
                break;
            case 'v':
                tag_v = 1;
                break;
            case 's':
                s = atoi(argv[optind]); 
                break;
            case 'E':
                E = atoi(argv[optind]);
                break;
            case 'b':
                b = atoi(argv[optind]);
                break;
            case 't':
                file_name = argv[optind-1]; //获取文件名
                file = fopen(file_name, "r");   // 打开文件
                if(file == NULL){
                    perror(file_name);
                    exit(EXIT_FAILURE);
                }
        }
    }
    printSummary(hit_count, miss_count, eviction_count);
    return 0;
}
